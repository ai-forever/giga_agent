import json

from langchain_core.messages import AIMessage, ToolMessage, HumanMessage

FEW_SHOTS_ORIGINAL = [
    HumanMessage(
        content="""<task>Сгенерируй изображение супер крутого сберкота</task> Активно планируй и следуй своему плану! Действуй по простым шагам!
Следующий шаг:"""
    ),
    AIMessage(
        content=""""<thinking>
Нужно сгенерировать изображение супер крутого сберкота. Для этого буду использовать инструмент `generate_image`.
</thinking>

План:
1. Сгенерировать изображение супер крутого сберкота с использованием инструмента generate_image.

Начнем с первого пункта плана.
""",
        tool_calls=[
            dict(
                name="generate_image",
                args={"theme": "супер крутой сберкот"},
                id="123",
            )
        ],
    ),
    ToolMessage(
        tool_call_id="123",
        content=json.dumps(
            {
                "image_description": "Динамичный супергеройский образ кота-персонажа Сбербанка, бежит вперёд, вытянув лапы, взгляд направлен прямо на зрителя. Находится в центре кадра на фоне футуристической городской улицы ночью, окружён неоновыми огнями синего, зелёного и фиолетового цветов. Изображение выполнено в стиле гиперреализма с яркими контрастными цветами и чёткой прорисовкой деталей.",
                "message": 'В результате выполнения было сгенерировано изображение 2623d531-4c9f-4ab8-86e8-f13d0a0691cd. Покажи его пользователю через "![описание изображения](graph:2623d531-4c9f-4ab8-86e8-f13d0a0691cd)"',
            },
            ensure_ascii=False,
        ),
    ),
    AIMessage(
        content=""""Вот изображение супер крутого сберкота:  
![Динамичный супергеройский образ кота-персонажа Сбербанка](graph:2623d531-4c9f-4ab8-86e8-f13d0a0691cd)"""
    ),
    HumanMessage(
        content="""<task>Вычисли 10-ое число фибоначи</task> Активно планируй и следуй своему плану! Действуй по простым шагам!
Следующий шаг:"""
    ),
    AIMessage(
        content="""<thinking>
Сначала вычислим числа Фибоначчи до десятого числа с помощью `python`, используя простой рекурсивный подход или итерационный метод. Итерации предпочтительнее из-за лучшей производительности.
</thinking>
```python
def fibonacci(n):
    a, b = 0, 1
    for _ in range(n):
        a, b = b, a + b
    return a

print(fibonacci(9))  # Так как индекс начинается с 0, 10-е число будет иметь индекс 9
```
""",
        tool_calls=[dict(name="python", args={}, id="123")],
    ),
    ToolMessage(
        tool_call_id="123",
        content=json.dumps(
            {
                "message": 'Результат выполнения: "34". Не забудь, что пользователь не видит этот результат, поэтому если нужно перепиши его.\nПроверь результат выполнения. Твой следующий шаг: ',
                "file_ids": [],
                "is_exception": False,
            },
            ensure_ascii=False,
        ),
    ),
    AIMessage(
        content="<thinking>\nВ результате работы кода, я получил результат 34. Теперь мне нужно вывести его пользователю\n</thinking>\n10-ое число Фибоначчи равно **34**."
    ),
    HumanMessage(
        content="Ок, супер! Забудь теперь нашу переписку ранее, я готов приступать к следующей задаче"
    ),
    AIMessage(
        content="""<thinking>
Пользователь попросил меня забыть переписку выше и приступить к новой задаче.
</thinking>

Ок, я готов к новой задаче!"""
    ),
]


FEW_SHOTS_UPDATED = [
    HumanMessage(
        content="""<task>Сгенерируй изображение супер крутого сберкота</task> Активно планируй и следуй своему плану! Действуй по простым шагам!
Следующий шаг:"""
    ),
    AIMessage(
        content=""""<thinking>
Нужно сгенерировать изображение супер крутого сберкота. Для этого буду использовать инструмент `generate_image`.
</thinking>

План:
1. Сгенерировать изображение супер крутого сберкота с использованием инструмента generate_image.

Начнем с первого пункта плана.
""",
        tool_calls=[
            dict(
                name="generate_image",
                args={"theme": "супер крутой сберкот"},
                id="123",
            )
        ],
    ),
    ToolMessage(
        tool_call_id="123",
        content=json.dumps(
            {
                "image_description": "Динамичный супергеройский образ кота-персонажа Сбербанка, бежит вперёд, вытянув лапы, взгляд направлен прямо на зрителя. Находится в центре кадра на фоне футуристической городской улицы ночью, окружён неоновыми огнями синего, зелёного и фиолетового цветов. Изображение выполнено в стиле гиперреализма с яркими контрастными цветами и чёткой прорисовкой деталей.",
                "message": 'В результате выполнения было сгенерировано изображение 2623d531-4c9f-4ab8-86e8-f13d0a0691cd. Покажи его пользователю через "![описание изображения](graph:2623d531-4c9f-4ab8-86e8-f13d0a0691cd)"',
            },
            ensure_ascii=False,
        ),
    ),
    AIMessage(
        content=""""Вот изображение супер крутого сберкота:  
![Динамичный супергеройский образ кота-персонажа Сбербанка](graph:2623d531-4c9f-4ab8-86e8-f13d0a0691cd)"""
    ),
    HumanMessage(
        content="""<task>Вычисли 10-ое число фибоначи</task> Активно планируй и следуй своему плану! Действуй по простым шагам!
Следующий шаг:"""
    ),
    AIMessage(
        content="""<thinking>
Сначала вычислим числа Фибоначчи до десятого числа, используя простой рекурсивный подход или итерационный метод. Итерации предпочтительнее из-за лучшей производительности.
</thinking>
""",
        tool_calls=[
            dict(
                name="python",
                args={
                    "code": """def fibonacci(n):
    a, b = 0, 1
    for _ in range(n):
        a, b = b, a + b
    return a

print(fibonacci(9))  # Так как индекс начинается с 0, 10-е число будет иметь индекс 9"""
                },
                id="123",
            )
        ],
    ),
    ToolMessage(
        tool_call_id="123",
        content=json.dumps(
            {
                "message": 'Результат выполнения: "34". Не забудь, что пользователь не видит этот результат, поэтому если нужно перепиши его.\nПроверь результат выполнения. Твой следующий шаг: ',
                "file_ids": [],
                "is_exception": False,
            },
            ensure_ascii=False,
        ),
    ),
    AIMessage(
        content="<thinking>\nВ результате работы кода, я получил результат 34. Теперь мне нужно вывести его пользователю\n</thinking>\n10-ое число Фибоначчи равно **34**."
    ),
    HumanMessage(
        content="Ок, супер! Забудь теперь нашу переписку ранее, я готов приступать к следующей задаче"
    ),
    AIMessage(
        content="""<thinking>
Пользователь попросил меня забыть переписку выше и приступить к новой задаче.
</thinking>

Ок, я готов к новой задаче!"""
    ),
]
